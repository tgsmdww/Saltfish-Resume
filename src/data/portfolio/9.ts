export const information = {
  heading: "GPK: An Efficient Special Symbol Input Method for Keyboards",
  introduction:
    "A swipe-based input method for users with keyboard and mouse only to type special symbols",
  title1: "ABSTRACT",
  content1:
    "We introduce a novel typing technique for special symbols in the keyboard-only environment. The technique, called GPK (Gliding on Physical Keyboard), consists of two steps for entering special symbols. First, a user draws the special symbol on the keyboard by gliding over keys; Second, the user can select the desired symbol from the predicted symbols generated by GPK. Users can also switch from this mode to normal typing mode. We also present an application of this input technique based on web browsers. A user study with nine participants who are familiar with keyboard input showed the input efficiency of GPK. We compared the typing efficiency of GPK with other special symbol typing methods. We could deploy this method to office environments where users have desktop computers with a keyboard only. It could also inspire future work of integrating this method into word processors, document preparation systems and web environments.",
  title2: "ACKNOWLEDGEMENT",
  content2:
    "I work with another ZJU student Xiyuan He on this project. The paper was accepted by CHI'19 Extended Abstract, Student Research Competition",
  title3: "MEDIA AND IMAGES",
  title4: "GPK: A Quick Review",
  pdfhref: "/pdf/chi19src.pdf",
  pdfcontent: "DOWNLOAD PAPER",
  pdfhref2: "/pdf/chi19srcposter.pdf",
  pdfcontent2: "VIEW POSTER"
};

export const leftatlas = [
  {
    name: "pic1",
    content:
      "Figure 1: An overview of GPK. Users can glide on the keyboard and choose the special symbol they want to type.",
    picsrc: require("@/assets/Portfolio/gpk/1.png")
  },
  {
    name: "pic3",
    content:
      "Figure 3: Gboard on Android is an example of sliding-to-type keyboard.",
    picsrc: require("@/assets/Portfolio/gpk/3.png")
  },
  {
    name: "pic5",
    content: "Figure 5: The main framework of the recognition.",
    picsrc: require("@/assets/Portfolio/gpk/5.png")
  },
  {
    name: "pic7",
    content:
      "Figure 7: The clustering result. Blue dots are the vectors and red dots are the centroids (Tokens)",
    picsrc: require("@/assets/Portfolio/gpk/7.png")
  },
  {
    name: "pic9",
    content: "Figure 9: User study session 2",
    picsrc: require("@/assets/Portfolio/gpk/9.png")
  }
];

export const rightatlas = [
  {
    name: "pic2",
    content:
      "Figure 2: The virtual keyboard on Win10. Users can drag the mouse to draw characters, but it supports basic characters only.",
    picsrc: require("@/assets/Portfolio/gpk/2.png")
  },
  {
    name: "pic4",
    content:
      "Figure 4: Swipe left by sliding on the physical keyboard of BlackBerry KEYone or KEY2.",
    picsrc: require("@/assets/Portfolio/gpk/4.png")
  },
  {
    name: "pic6",
    content:
      "Figure 6: An example of Sudoku Principle: two Sudokus with Key ’H’ being the center",
    picsrc: require("@/assets/Portfolio/gpk/6.png")
  },
  {
    name: "pic8",
    content: "Figure 8: User study session 1",
    picsrc: require("@/assets/Portfolio/gpk/8.png")
  }
];

export const QA = [
  {
    question: "Does it work well and efficient?",
    answer:
      "Yes. Currently, people use tying-based method like Markdown and LaTeX's mathematics mode, or selection-based method of choosing from a series of characters, to input special characters. Our method is significantly better in efficiency. Details can be seen inside the paper."
  },
  {
    question:
      "Now it just provided a web version, what if I want to use it ubiquitously?",
    answer:
      "With the same algorithm, it is easy to transplant GPK into other platforms, like a browser extension, a Word Macro, or a input method. And we are doing this now."
  }
];
